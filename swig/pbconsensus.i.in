%module pbconsensus

%{
#define SWIG_FILE_WITH_INIT
%}

%pythoncode
%{
__version__ = "@PacBioConsensus_VERSION@"
%}

%ignore *::operator[];
%ignore *::operator=;
%ignore *::operator<<;
%ignore *::operator std::string;

%ignore boost::noncopyable;
namespace boost
{ class noncopyable {}; }

%include <exception.i>
%include <std_string.i>
%include <std_vector.i>
%include <stdint.i>

#ifdef SWIGPYTHON
%include "numpy.i"
#endif

// generic exception handling
%exception {
    try
    { $action }
    catch (const std::exception& e)
    { SWIG_exception(SWIG_RuntimeError, e.what()); }
}

namespace std
{ %template(Uint8Vector) std::vector<uint8_t>; }

%define py_tp_str(cls)
%#ifdef SWIGPYTHON
%feature("python:slot", "tp_str", functype="reprfunc") cls::as_string();
%extend cls { std::string as_string() { return std::string(*$self); } }
%#endif // SWIGPYTHON
%enddef

// no include dependencies
%include "ModelConfig.i"
%include "Mutation.i"
%include "Polish.i"
%include "Read.i"

// after Read.i
%include "Integrator.i"
%include "Poa.i"

%init
%{
#ifdef SWIGPYTHON
  import_array();
#endif // SWIGPYTHON
%}
